(function(){const e=e=>{const t=e<<0>>>24,n=e<<8>>>24,a=e<<16>>>24,d=e<<24>>>24;return t+"."+n+"."+a+"."+d},t=t=>{const n=t.innerHTML;if(n.match(/^(\d{10}|\d{13})$/)&&t.id.match(/(time|_at|date)\]$/i)){const e=new Date;e.setTime(10===n.length?1e3*parseInt(n):parseInt(n));let a=e.getFullYear()+"-"+(e.getMonth()+1)+"-"+e.getDate()+" "+e.getHours()+":"+e.getMinutes()+":"+e.getSeconds();return a=a.replace(/\b\d{1}\b/g,"0$&"),13===n.length&&(a+="."+String(e.getMilliseconds()).padStart(3,"0")),void(t.innerHTML=n+'(<span class="plugin-readable-number">'+a+"</span>)")}n.match(/^\d{1,10}$/)&&t.id.match(/ip\]$/i)&&(t.innerHTML=n+'(<span class="plugin-readable-number">'+e(n)+"</span>)")};document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("table");e&&(document.querySelectorAll('#table tbody:last-child td[id^="val"]').forEach(e=>t(e)),new MutationObserver(e=>e.forEach(e=>{e.addedNodes.forEach(e=>{"TBODY"===e.nodeName&&e.childNodes.forEach(e=>e.childNodes.forEach(e=>t(e)))})})).observe(e,{childList:!0,subtree:!0}))})})();