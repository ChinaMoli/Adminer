const long2ip=e=>{const t=e<<0>>>24,n=e<<8>>>24,a=e<<16>>>24,d=e<<24>>>24;return t+"."+n+"."+a+"."+d},render=e=>{const t=e.innerHTML;if(t.match(/^(\d{10}|\d{13})$/)&&e.id.match(/(time|_at|date)\]$/i)){const n=new Date;n.setTime(10===t.length?1e3*parseInt(t):parseInt(t));let a=n.getFullYear()+"-"+(n.getMonth()+1)+"-"+n.getDate()+" "+n.getHours()+":"+n.getMinutes()+":"+n.getSeconds();return a=a.replace(/\b\d{1}\b/g,"0$&"),13===t.length&&(a+="."+String(n.getMilliseconds()).padStart(3,"0")),void(e.innerHTML=t+'(<span class="plugin-readable-number">'+a+"</span>)")}t.match(/^\d{1,10}$/)&&e.id.match(/ip\]$/i)&&(e.innerHTML=t+'(<span class="plugin-readable-number">'+long2ip(t)+"</span>)")};document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("table");e&&(document.querySelectorAll('#table tbody:last-child td[id^="val"]').forEach(e=>render(e)),new MutationObserver(e=>e.forEach(e=>{e.addedNodes.forEach(e=>{"TBODY"===e.nodeName&&e.childNodes.forEach(e=>e.childNodes.forEach(e=>render(e)))})})).observe(e,{childList:!0,subtree:!0}))});